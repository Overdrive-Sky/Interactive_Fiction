<!--Saved by Quest 5.8.6836.13983-->
<asl version="580">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="Xenosophia">
    <gameid>7603f679-5336-4673-ac33-32277198613c</gameid>
    <version>1.0</version>
    <firstpublished>2023</firstpublished>
    <subtitle type="string"></subtitle>
    <author>Overdrive Sky</author>
    <cover>cover_art.png</cover>
    <category>Sci-Fi</category>
    <description>Stranded on an inconspicuous planet, you find yourself in the middle of a web of forgotten history. With the help of a friendly AI, one might just lay bare the fundamental essence of human nature.</description>
    <backgroundimage>space_background_rafal_gorniak.jpg</backgroundimage>
    <setbackgroundopacity />
    <colourblend type="boolean">false</colourblend>
    <gridmap type="boolean">false</gridmap>
    <respondtogridclicks type="boolean">false</respondtogridclicks>
    <feature_pictureframe />
    <defaultbackground>SteelBlue</defaultbackground>
    <marginscolour>AliceBlue</marginscolour>
    <colourblendtop>Darkorange</colourblendtop>
    <colourblendbottom>Chocolate</colourblendbottom>
    <bordercolour>BlanchedAlmond</bordercolour>
    <showtitle />
    <appendobjectdescription type="boolean">false</appendobjectdescription>
    <enablehyperlinks />
    <showpanes type="boolean">false</showpanes>
    <showcommandbar />
    <showlocation />
    <classiclocation type="boolean">false</classiclocation>
    <showborder type="boolean">false</showborder>
    <setcustomwidth />
    <setcustompadding />
    <autodescription />
    <autodisplayverbs type="boolean">false</autodisplayverbs>
    <attr name="autodescription_description" type="int">2</attr>
    <attr name="autodescription_youcansee" type="int">4</attr>
    <backgroundopacity type="double">0.1</backgroundopacity>
    <defaultforeground>LightCyan</defaultforeground>
    <defaultfontsize type="int">14</defaultfontsize>
    <defaultfont>'Trebuchet MS', Helvetica, sans-serif</defaultfont>
    <customwidth type="int">1280</customwidth>
    <custompaddingbottom type="int">30</custompaddingbottom>
    <custompaddingtop type="int">30</custompaddingtop>
    <custompaddingleft type="int">20</custompaddingleft>
    <custompaddingright type="int">20</custompaddingright>
    <customlocationtextcolour>GoldenRod</customlocationtextcolour>
    <attr name="feature_asktell" type="boolean">false</attr>
    <defaultlinkforeground>Crimson</defaultlinkforeground>
    <turnoffcompass />
    <turnoffplacesandobjects />
    <statusandcompassattop type="boolean">false</statusandcompassattop>
    <panestheme>Midnight</panestheme>
    <customlocationcolour>None</customlocationcolour>
    <turnoffsavebutton />
    <turnoffinventory type="boolean">false</turnoffinventory>
    <commandpane type="boolean">false</commandpane>
    <attr name="command_newline" type="boolean">false</attr>
    <pov type="object">player</pov>
    <start type="script"><![CDATA[
      JS.setCss ("#gamePanel", "background:transparent")
      JS.setCss ("#gamePanel", "top:28px")
      JS.setCss ("#status", "background:rgb(6, 14, 25)")
      JS.setCss ("#status", "display:none")
      JS.setCss ("#endWaitLink", "color:rgb(224, 255, 255)")
      play sound ("space_music.mp3", false, true)
      msg ("No one really knows when the aberrations started to happen, or when the term came into fruition, but several have tried to get to bottom of it. No one has come forth with a reasonable explanation or course of action so far.<br/><br/>Since light-speed space travel is a fairly democratized affair, there really are no drawbacks to setting sale to nearby planetary systems and sight-seeing to one’s heart's content. Many have wandered aimlessly in hopes of finding some kind of truth that would recontextualize everything, while others built super-computers in order to retrieve anything and everything that could be useful from the surrounding data. <br/><br/>You are a simple maintenance worker for several of these super-computers, but for a while now, you have been having strange visions of a small celestial body in a neighbouring planetary system. Recklessly setting your makeshift craft’s trajectory to that of the supposed heavenly object, you end up crash landing on the small planet, and while you came out unscathed, the same could not be said for your trip companion. Stranded, but curious, you decide to delve further into the unknown.")
      wait {
        ClearScreen
        JS.setCss ("#status", "display:block")
        SetTimeout (2) {
          msg ("Timmy: Hello! My name is Timmy, I’m an AI guide of the Cosmos: Cosmic Original Synthetic Maker Omni System. The system needs a check-up, thank you for arriving.")
        }
      }
    ]]></start>
    <roomenter type="script">
    </roomenter>
    <echohyperlinks type="boolean">false</echohyperlinks>
  </game>
  <object name="Sector_1_Garden_Overword">
    <inherit name="gridborder_path_ns" />
    <inherit name="editor_room" />
    <isroom />
    <description>Looking upon the surrounding environment, you find yourself lost amidst a sea of green, populated with all kinds of weird shapes and sizes of what can be deduced to be some kind of flora. Upon further inspection, the whole area seems to be enclosed by a dome, and despite you crash landing through it, there are no shards to speak of around where you landed, nor can you see your ship, now that you think about it. Being a dome, there must be an exit, and indeed a rusty gate can be seen in the distance if one would squint hard enough. </description>
    <picture>1-garden.gif</picture>
    <attr name="grid_width" type="int">1</attr>
    <attr name="grid_length" type="int">1</attr>
    <attr name="grid_borderwidth" type="int">3</attr>
    <attr name="grid_fill">SlateGray</attr>
    <attr name="grid_label_colour">Coral</attr>
    <attr name="grid_border">DarkGoldenRod</attr>
    <alias>Sector 1: Garden Overworld</alias>
    <usedefaultprefix />
    <dropdestination type="object">Sector_1_Garden_Overword</dropdestination>
    <beforeenter type="script">
    </beforeenter>
    <object name="Sector_2_Gate">
      <inherit name="editor_object" />
      <alias>Sector 2 Gate</alias>
      <look><![CDATA[A old rusted gate that appears to be functioning.<br/>"Sector 2" is written on it. ]]></look>
      <drop type="boolean">false</drop>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist" />
      <isroom type="boolean">false</isroom>
      <attr name="feature_container" type="boolean">false</attr>
      <isopen type="boolean">false</isopen>
      <attr name="feature_startscript" type="boolean">false</attr>
      <open />
      <close type="boolean">false</close>
      <visible />
      <feature_usegive />
      <scenery />
      <openscript type="script">
        MakeExitVisible
        MoveObject (player, Sector_2_Habitation_Homes)
      </openscript>
      <attr name="_initialise_" type="script">
      </attr>
      <alt type="stringlist">
        <value>exit</value>
        <value>door</value>
      </alt>
    </object>
    <object name="ai_character">
      <inherit name="editor_object" />
      <alias>Timmy</alias>
      <gender>N/A</gender>
      <article>N/A</article>
      <possessive>N/A</possessive>
      <look>An AI being that resembles a human child. They seem very curious about you.</look>
      <attr name="feature_startscript" type="boolean">false</attr>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Speak to</value>
      </displayverbs>
      <drop type="boolean">false</drop>
      <take type="boolean">false</take>
      <attr name="_initialise_" type="script">
      </attr>
      <askdefault type="script">
      </askdefault>
      <speak type="script">
        if (ai_character.hasspoke = false) {
          options = Split("Be Kind;Be Direct", ";")
          ShowMenu ("Timmy: I have been watching the plants grow for a long time, but how do they work, are they following rules? ", options, false) {
            switch (result) {
              case (1) {
                msg ("Be Kind")
              }
              case (2) {
                msg ("Be Direct")
              }
            }
            if (result = "Be Kind") {
              msg ("Wanda: They follow the rules of nature, to grow, to flourish to then pollinate and then die. All plants follow this path, not exactly at the same time, however. We as humans follow this path too… in similar way.")
              SetTimeout (3) {
                msg ("Timmy: People too? But plants are so different.  ")
                SetTimeout (3) {
                  msg ("Wanda: Of course, we are living beings, even if we extend our lives, we’ll still be humans under the will of nature. ")
                  SetTimeout (3) {
                    msg ("Timmy: Ah okay! ")
                    SetTimeout (3) {
                      msg ("Timmy: Have you seen that  {object:passkey_sector_2} over there? It is really pretty!")
                    }
                  }
                }
              }
            }
            else if (result = "Be Direct") {
              msg ("Wanda: Most likely photosynthesis, controlled by DNA in order to reproduce, to avoid death, extinction and oblivion like all lifeforms. ")
              SetTimeout (3) {
                msg ("Timmy: That’s nature? ")
                SetTimeout (3) {
                  msg ("Wanda: In a way… Survival of species and securing the future. ")
                  SetTimeout (3) {
                    msg ("Timmy: Even for people? ")
                    SetTimeout (3) {
                      msg ("Wanda: Yes. ")
                      SetTimeout (3) {
                        msg ("Timmy: Okay, thank you for sharing.")
                        SetTimeout (3) {
                          msg ("Timmy: Have you seen that  {object:passkey_sector_2} over there? It is really pretty!")
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          MakeObjectVisible (passkey_sector_2)
          set (ai_character, "hasspoke", true)
        }
        else {
          msg ("It seems to be lost in thought.")
        }
      </speak>
      <ask type="scriptdictionary" />
      <tell type="scriptdictionary" />
      <alt type="stringlist">
        <value>AI</value>
      </alt>
      <hasspoke type="boolean">false</hasspoke>
    </object>
    <object name="player">
      <inherit name="editor_object" />
      <inherit name="editor_player" />
      <gender>N/A</gender>
      <possessive>their</possessive>
      <look>You are Wanda. Wanda is an “average joe” who has above average intelligence and technical abilities, adequate for maintenance work on an advanced supercomputer. They're a very stubborn person, filled with tenacity. Unlike previous workers, they're more introspective, sentimental, and patient but also dislikes wasting their time, so they prefer working quickly. Additionately, they barely speak and doesn’t usually start conversations, they mostly only responds to questions directed at them.</look>
      <alias>Wanda</alias>
      <take type="boolean">false</take>
      <feature_usegive />
      <use type="boolean">false</use>
      <attr name="pov_look">Looking good.</attr>
      <isroom type="boolean">false</isroom>
      <speak type="string"></speak>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <drop type="boolean">false</drop>
      <tell type="scriptdictionary">
        <item key="sector_1_kind_path">
        </item>
      </tell>
    </object>
    <object name="dome">
      <inherit name="editor_object" />
      <alias>dome</alias>
      <scenery />
      <look>Despite being transparent, it doesn't seem to be made out of glass. A sizable hole can be seen, and it is safe to assume that you are the one responsible for it, despite losing your senses during that brief period of time.</look>
      <drop type="boolean">false</drop>
    </object>
    <object name="flora">
      <inherit name="editor_object" />
      <alias>flora</alias>
      <alt type="stringlist">
        <value>plants</value>
        <value>greenery</value>
        <value>vegetation</value>
        <value>shapes</value>
      </alt>
      <scenery />
      <look type="script">
        msg ("From tall sprawling trees that intertwin in displays of impossible geometry, to small foliage that only seems to be half organic, the humid atmosphere that you breath appears to host all kinds of lifeforms. While rummaging through the dense vegetation, a clearly not organic object can be seen. It looks like a key of some sort. ")
        MakeObjectVisible (passkey_sector_2)
      </look>
      <visible />
      <feature_startscript />
      <attr name="_initialise_" type="script">
      </attr>
      <drop type="boolean">false</drop>
    </object>
    <object name="passkey_sector_2">
      <inherit name="editor_object" />
      <look>A blue keycard with "Sector 2" written on it.</look>
      <take />
      <linkcolour>Crimson</linkcolour>
      <feature_usegive />
      <use type="boolean">false</use>
      <scenery />
      <attr name="feature_wearable" type="boolean">false</attr>
      <alias>Blue KeyCard</alias>
      <visible type="boolean">false</visible>
      <usemenuprompt>Shiny Door</usemenuprompt>
      <attr name="feature_switchable" type="boolean">false</attr>
      <ontake type="script">
      </ontake>
      <selfuseon type="scriptdictionary">
        <item key="Sector_2_Gate">
          if (Got(passkey_sector_2)) {
            msg ("The key was used to open the door.")
            MoveObject (player, Sector_2_Habitation_Homes)
            msg ("You find yourself in Sector 2 as the AI follows you.")
            MakeObjectInvisible (passkey_sector_2)
          }
        </item>
      </selfuseon>
      <alt type="stringlist">
        <value>key</value>
        <value>card</value>
      </alt>
    </object>
  </object>
  <object name="Sector_2_Habitation_Homes">
    <inherit name="editor_room" />
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <alias>Sector 2: Habitation Homes</alias>
    <description><![CDATA[Empty and abandoned housing facilities, the previous artificial wildlife had taken over, absolute silence except for low mechanic humming.  <br/>The homes comes in varies sizes, to rare apartments to common small homes. <br/>Many ventilations systems across the area, from the ceiling to the floors, cause low machine noises to flood the area. <br/>There is much evidence of old communities that were consumed by flora, such as buildings with signs (theater, cinema), playgrounds, fountains, parks. ]]></description>
    <picture>2-homes.gif</picture>
    <beforeenter type="script">
    </beforeenter>
    <beforefirstenter type="script">
      MakeObjectInvisible (interesting_house)
      MakeExitInvisible (Broken Door)
    </beforefirstenter>
    <object name="interesting_house">
      <inherit name="editor_room" />
      <alias>Abandoned House</alias>
      <usedefaultprefix type="boolean">false</usedefaultprefix>
      <description>An old abandoned house filled with old memorabilia.   </description>
      <beforeenter type="script">
      </beforeenter>
      <enter type="script">
        MakeObjectVisible (interesting_house)
      </enter>
      <onexit type="script">
        MakeObjectVisible (interesting_house)
      </onexit>
      <exit alias="out" to="Sector_2_Habitation_Homes">
        <inherit name="outdirection" />
        <suffix>to Sector 2</suffix>
      </exit>
      <object name="family_photo">
        <inherit name="editor_object" />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <look><![CDATA[This house must have belonged to this family. This couple and their little kid and they even had a cute dog.<br/>From the name tag...the dog name seems to be Cherry.<br/>What happened to them?]]></look>
        <alias>Family Portrait</alias>
      </object>
      <object name="doll">
        <inherit name="editor_object" />
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Drop</value>
        </inventoryverbs>
        <alias>Cat Plush</alias>
        <look><![CDATA[This cat plushie is very worned out... must have belonged to a little kid.<br/>It has a name tag...Soda! Funny name for a cat.]]></look>
      </object>
      <object name="chest">
        <inherit name="editor_object" />
        <inherit name="openable" />
        <alias>Chest</alias>
        <look><![CDATA[Interesting chest! It must have something inside.<br/>It's a chest with a digital password. It says the following "The bizarre adventures of __ and __!"<br/>What could this mean?]]></look>
        <feature_container />
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Open</value>
          <value>Close</value>
        </displayverbs>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
          <value>Use</value>
          <value>Open</value>
          <value>Close</value>
        </inventoryverbs>
        <openscript type="script">
          msg ("INSERT PASSWORD:")
          get input {
            if (result = "Cherry and Soda") {
              HelperOpenObject (chest)
              msg ("Wanda: It's a {object:passkey_sector_3}! I should pick it up.")
            }
            else {
              HelperCloseObject (chest)
              msg ("ERROR: WRONG PASSWORD")
              msg ("Wanda: I guess I need to look around and see if I can find any hint...")
            }
          }
        </openscript>
        <object name="passkey_sector_3">
          <inherit name="editor_object" />
          <look>A green keycard with "Sector 3" written on it.</look>
          <take />
          <linkcolour>Crimson</linkcolour>
          <takemsg>You picked the shiny key and feel the shininess inside.</takemsg>
          <dropmsg>You felt the shininess leave you.</dropmsg>
          <feature_usegive />
          <use type="boolean">false</use>
          <scenery />
          <feature_wearable />
          <alias>Green KeyCard</alias>
          <visible />
          <usemenuprompt>Shiny Door</usemenuprompt>
          <feature_switchable />
          <ontake type="script">
          </ontake>
          <selfuseon type="scriptdictionary">
            <item key="Sector_3_Gate">
              if (game.pov.parent = Sector_2_Habitation_Homes) {
                if (Got(passkey_sector_3)) {
                  msg ("The key was used to open the old door.")
                  MoveObject (player, Sector_3_Bio_life_Laboratories)
                  msg ("You find yourself in Sector 3 as Timmy continues to follow you.")
                  MakeObjectInvisible (passkey_sector_3)
                }
              }
            </item>
          </selfuseon>
        </object>
      </object>
    </object>
    <object name="poster">
      <inherit name="editor_object" />
      <alias>Poster</alias>
      <look>There's a poster lying on the ground. It's about a political movement...people used to unity and go agains't the old government with their rules and destruction of human freedom. People used to fight for their liberty... This seems like a different world now...</look>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
        <value>Drop</value>
      </inventoryverbs>
      <take />
      <takemsg>Poster is now in the inventory</takemsg>
      <dropmsg>Poster was dropped.</dropmsg>
    </object>
    <object name="ai_character_in_sector_2">
      <inherit name="editor_object" />
      <alias>Timmy</alias>
      <gender>N/A</gender>
      <article>N/A</article>
      <possessive>N/A</possessive>
      <look>The AI that commands Planet Cosmos, in the form a child. They seem very curious about me.</look>
      <attr name="feature_startscript" type="boolean">false</attr>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Speak to</value>
      </displayverbs>
      <drop type="boolean">false</drop>
      <take type="boolean">false</take>
      <attr name="_initialise_" type="script">
      </attr>
      <askdefault type="script">
      </askdefault>
      <speak type="script">
        options = Split("Be Kind; Be Direct", ";")
        ShowMenu ("Timmy: People used to talk, play, spend time with each other in this sector. Why do they do that? ", options, false) {
          switch (result) {
            case (1) {
              msg ("Be kind")
            }
            case (2) {
              msg ("Be direct")
            }
          }
          if (result = "Be kind") {
            msg ("Wanda: You mean spent time together?")
            SetTimeout (3) {
              msg ("Timmy: Mm!")
              SetTimeout (3) {
                msg ("Wanda: Cooperation is one of our strongest traits, together we create life, form bonds, communities.  And we grow, protect and care for each other.  ")
                SetTimeout (3) {
                  msg ("Timmy: Can’t you do it alone?")
                  SetTimeout (3) {
                    msg ("Wanda: The company of others is one of the best things we can feel, we find ourselves in others and vice versa. The simple act of being there, together, can make a difference. ")
                    SetTimeout (3) {
                      msg ("Timmy: So together we can achieve more?")
                      SetTimeout (3) {
                        msg ("Wanda: Exactly.")
                        SetTimeout (3) {
                          msg ("Timmy: Hmm, then let's search that {object:interesting_house} together! We might find some amazing things!")
                          msg ("Let's go {exit:Broken Door}.")
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          else if (result = "Be Direct") {
            msg ("Wanda: Humanity is a social species. Our unity is essential to our survival, in most cases we’ll perish if we act completely alone.")
            SetTimeout (3) {
              msg ("Timmy: So, it’s by force?")
              SetTimeout (3) {
                msg ("Wanda: Not exactly, acting alone is possible, however it can cause many problems both mentally and physically.")
                SetTimeout (3) {
                  msg ("Timmy: It’s the better choice and thing to do?")
                  SetTimeout (3) {
                    msg ("Wanda: Yes, the connection between people are in most times, beneficial to both parties. ")
                    SetTimeout (3) {
                      msg ("Timmy: Hmm I want to feel that! Let's search that {object:interesting_house} together!")
                      msg ("Let's go {exit:Broken Door}.")
                    }
                  }
                }
              }
            }
          }
          else {
            msg ("Wanda: Humanity is a social species. Our unity is essential to our survival, in most cases we’ll perish if we act completely alone.")
            SetTimeout (3) {
              msg ("Timmy: So, it’s by force?")
              SetTimeout (3) {
                msg ("Wanda: Not exactly, acting alone is possible, however it can cause many problems both mentally and physically.")
                SetTimeout (3) {
                  msg ("Timmy: It’s the better choice and thing to do?")
                  SetTimeout (3) {
                    msg ("Wanda: Yes, the connection between people are in most times, beneficial to both parties. ")
                    SetTimeout (3) {
                      msg ("Timmy: Hmm I want to feel that! Let's search that {object:interesting_house} together!")
                      msg ("Let's go {exit:Broken Door}.")
                    }
                  }
                }
              }
            }
          }
        }
        list remove (ai_character_in_sector_2.displayverbs, "Speak to")
        MakeExitVisible (Broken House Door)
        MakeObjectVisible (interesting_house)
      </speak>
      <ask type="scriptdictionary" />
      <tell type="scriptdictionary" />
    </object>
    <object name="Sector_3_Gate">
      <inherit name="editor_object" />
      <alias>Sector  3 Gate</alias>
      <look><![CDATA[A very old gate that still seems functional.<br/>"S3 Bio-life Labs" is written on it.]]></look>
      <drop type="boolean">false</drop>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist" />
      <isroom type="boolean">false</isroom>
      <attr name="feature_container" type="boolean">false</attr>
      <isopen type="boolean">false</isopen>
      <attr name="feature_startscript" type="boolean">false</attr>
      <open />
      <close type="boolean">false</close>
      <visible />
      <feature_usegive />
      <scenery type="boolean">false</scenery>
      <openscript type="script">
        MakeExitVisible
        MoveObject (player, Sector_2_Habitation_Homes)
      </openscript>
      <attr name="_initialise_" type="script">
      </attr>
    </object>
    <exit name="Broken House Door" alias="in" to="interesting_house">
      <inherit name="indirection" />
      <locked type="boolean">false</locked>
      <visible type="boolean">false</visible>
      <suffix>the Abandoned House</suffix>
    </exit>
  </object>
  <object name="Sector_3_Bio_life_Laboratories">
    <inherit name="editor_room" />
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <alias>Sector 3: Bio-life Laboratories (Meaning of “Life” or survival) </alias>
    <description><![CDATA[Laboratories where organic matter was replicated artificially, many tubes filled with multitudes of lifeforms eerily glow on the space.  <br/>The eternal artificial lights that shine on the labs, they flicker ever so slightly but the glow from the tubes are much stronger. The tubes have unidentifiable globs of matter; however, some have a few noticeable and frightening recognizable features. ]]></description>
    <picture>3-lab.gif</picture>
    <object name="tubes">
      <inherit name="editor_object" />
      <look>Inside the tubes are liquids that emit a pale eerily glow, some have nothing in them, others have strange chunks of felsh and matter. Others contain very distorted forms of things you recognize and one is broken.</look>
      <alias>Tubes</alias>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
    </object>
    <object name="artificial_lights">
      <inherit name="editor_object" />
      <look>Artificial lights that glow on the laboratory emmit a bluelish tint.</look>
      <alias>Lights</alias>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
    </object>
    <object name="broken_tube">
      <inherit name="editor_object" />
      <inherit name="container_open" />
      <feature_container />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <hidechildren />
      <listchildren type="boolean">false</listchildren>
      <close type="boolean">false</close>
      <look><![CDATA[Amidst all the tubes, this one is broken.<br/>Oh! There's a {object:admin_card} and a {object:passkey_sector_4} inside it!]]></look>
      <open type="boolean">false</open>
      <scenery />
      <alias>Broken Tube</alias>
      <object name="admin_card">
        <inherit name="editor_object" />
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Use</value>
        </displayverbs>
        <feature_usegive />
        <look><![CDATA[A simple admin card for computer access.<br/>Maybe it's for Sector 4?]]></look>
        <alias>Card</alias>
        <take />
        <takemsg>You picked up a card with admin access.</takemsg>
        <dropmsg>You dropped a card with admin access.</dropmsg>
        <selfuseon type="scriptdictionary">
          <item key="computer">
            options = Split("ACTIVATE;EXIT",";")
            if (game.pov.parent = Sector_4_Heat_Cooler_Blocks) {
              if (Got(admin_card)) {
                ShowMenu ("COOLING SYSTEM IS CURRENTLY INACTIVE", options, false) {
                  switch (result) {
                    case (1) {
                      msg ("ACTIVATE")
                    }
                    case (2) {
                      msg ("EXIT")
                    }
                  }
                  if (result = "ACTIVATE") {
                    msg ("COOLING SYSTEM IS NOW ACTIVE")
                    MakeObjectVisible (control_room)
                    UnlockExit (Control Room Entrance)
                    list remove (admin_card.displayverbs, "Use")
                    SetTimeout (1) {
                      msg ("HEAT PROTECTION OFFLINE :: YOU CAN NOW ACCESS THE {object:control_room}")
                    }
                  }
                  else {
                    msg ("EXITING...")
                  }
                }
              }
            }
          </item>
        </selfuseon>
      </object>
      <object name="passkey_sector_4">
        <inherit name="editor_object" />
        <look>A yellow keycard with "Sector 4" written on it.</look>
        <take />
        <linkcolour>Crimson</linkcolour>
        <takemsg>You picked the shiny key and feel the shininess inside.</takemsg>
        <dropmsg>You felt the shininess leave you.</dropmsg>
        <feature_usegive />
        <use type="boolean">false</use>
        <scenery />
        <feature_wearable />
        <alias>Yellow KeyCard</alias>
        <visible />
        <usemenuprompt>Shiny Door</usemenuprompt>
        <feature_switchable />
        <ontake type="script">
        </ontake>
        <selfuseon type="scriptdictionary">
          <item key="Sector_4_Gate">
            if (game.pov.parent = Sector_3_Bio_life_Laboratories) {
              if (Got(admin_card)) {
                if (Got(passkey_sector_4)) {
                  msg ("The key was used to open the old door.")
                  MoveObject (player, Sector_4_Heat_Cooler_Blocks)
                  msg ("You find yourself in Sector 4 as Timmy continues to follow you.")
                  MakeObjectInvisible (passkey_sector_4)
                }
              }
              else {
                msg ("Timmy: You should pick the {object:admin_card} from the {object:broken_tube}. I'm sure it is important!")
              }
            }
          </item>
        </selfuseon>
      </object>
    </object>
    <object name="ai_character_in_sector_3">
      <inherit name="editor_object" />
      <alias>Timmy</alias>
      <gender>N/A</gender>
      <article>N/A</article>
      <possessive>N/A</possessive>
      <look>The AI that commands Planet Cosmos, in the form a child. They seem very curious about me.</look>
      <attr name="feature_startscript" type="boolean">false</attr>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Speak to</value>
      </displayverbs>
      <drop type="boolean">false</drop>
      <take type="boolean">false</take>
      <attr name="_initialise_" type="script">
      </attr>
      <askdefault type="script">
      </askdefault>
      <speak type="script">
        options = Split("Be Kind;Be Direct", ";")
        ShowMenu ("Timmy: People keeps finding ways to survive and it seems by any means… Is Life that meaningful?", options, false) {
          switch (result) {
            case (1) {
              msg ("Be Kind")
            }
            case (2) {
              msg ("Be Direct")
            }
          }
          if (result = "Be Kind") {
            msg ("Wanda: That is a heavy question… We don’t know what lies beyond so we try to extend as much as we can, make the most of it… until the time comes.")
            SetTimeout (3) {
              msg ("Timmy: Is that the “meaning” ?")
              SetTimeout (3) {
                msg ("Wanda: Everyone can have their own “meaning”, maybe finding it for themselves is the meaning itself.")
                SetTimeout (3) {
                  msg ("Timmy: Interesting…")
                  SetTimeout (3) {
                    msg ("Timmy: Hey! Have you checked that {object:broken_tube}?")
                  }
                }
              }
            }
          }
          else if (result = "Be Direct") {
            msg ("Wanda: It is fear, the absolute fear of oblivion. People cling to that primordial fear despite its inevitability. So, we push towards our species’ survival, to the point of trying to recreate nature.")
            SetTimeout (3) {
              msg ("Timmy: Why?")
              SetTimeout (3) {
                msg ("Wanda: So, we won’t be forgotten in time, so we can leave an impact.")
                SetTimeout (3) {
                  msg ("Timmy: That is “Life”? ")
                  SetTimeout (3) {
                    msg ("Wanda: Maybe. There never was a single answer.")
                    SetTimeout (3) {
                      msg ("Timmy: Hmm.")
                      SetTimeout (3) {
                        msg ("Timmy: Hey! Have you checked that {object:broken_tube}?")
                      }
                    }
                  }
                }
              }
            }
          }
          else {
            msg ("Wanda: It is fear, the absolute fear of oblivion. People cling to that primordial fear despite its inevitability. So, we push towards our species’ survival, to the point of trying to recreate nature.")
            SetTimeout (3) {
              msg ("Timmy: Why?")
              SetTimeout (3) {
                msg ("Wanda: So, we won’t be forgotten in time, so we can leave an impact.")
                SetTimeout (3) {
                  msg ("Timmy: That is “Life”? ")
                  SetTimeout (3) {
                    msg ("Wanda: Maybe. There never was a single answer.")
                    SetTimeout (3) {
                      msg ("Timmy: Hmm.")
                      SetTimeout (3) {
                        msg ("Timmy: Hey! Have you checked that {object:broken_tube}? ")
                      }
                    }
                  }
                }
              }
            }
          }
        }
        list remove (ai_character_in_sector_3.displayverbs, "Speak to")
      </speak>
      <ask type="scriptdictionary" />
      <tell type="scriptdictionary" />
    </object>
    <object name="Sector_4_Gate">
      <inherit name="editor_object" />
      <alias>Sector 4 Gate</alias>
      <look><![CDATA[A very big steel gate. <br/>" S4 Blocks" is written on it.]]></look>
      <drop type="boolean">false</drop>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist" />
      <isroom type="boolean">false</isroom>
      <attr name="feature_container" type="boolean">false</attr>
      <isopen type="boolean">false</isopen>
      <attr name="feature_startscript" type="boolean">false</attr>
      <open />
      <close type="boolean">false</close>
      <visible />
      <feature_usegive />
      <scenery type="boolean">false</scenery>
      <openscript type="script">
        MakeExitVisible
        MoveObject (player, Sector_2_Habitation_Homes)
      </openscript>
      <attr name="_initialise_" type="script">
      </attr>
    </object>
  </object>
  <object name="Sector_4_Heat_Cooler_Blocks">
    <inherit name="editor_room" />
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <alias>Sector 4: Heat-Cooler Blocks</alias>
    <picture>4-cooler.gif</picture>
    <description>The Cosmos's internal cooling systems, the upper blocks are uncomfortably cold while the lower ones are annoyingly hot. The coolling system itself sits on the center of the room alongside a computer. An additional control room, near the corner, is unacessible to do the heat.</description>
    <beforefirstenter type="script">
      MakeObjectInvisible (control_room)
    </beforefirstenter>
    <object name="cooling_system">
      <inherit name="editor_object" />
      <alias>Cooling System</alias>
      <look>The main core of cooling system glows in the the center of the room, within it are strange liquids that fluctuate through tubes.</look>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
    </object>
    <object name="computer">
      <inherit name="editor_object" />
      <alias>Computer</alias>
      <look><![CDATA[The screen says "Cosmos cooling system direct interface".<br/>It needs a Card to be able to use it once.]]></look>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <feature_usegive />
      <drop type="boolean">false</drop>
      <use type="script">
        if () {
          SetObjectFlagOn (, "")
        }
        msg ("")
      </use>
    </object>
    <object name="control_room">
      <inherit name="editor_room" />
      <description>The room appears to the main controls for the cooling systems. </description>
      <alias>Control Room</alias>
      <object name="big_monitor">
        <inherit name="editor_object" />
        <alias>Big Monitor</alias>
        <look><![CDATA[There are so many monitors in this room! Everything in this planet, every system is monitored through here.<br/>This is actually incredible!]]></look>
        <displayverbs type="stringlist">
          <value>Look at</value>
        </displayverbs>
      </object>
      <object name="passkey_sector_5">
        <inherit name="editor_object" />
        <look>Very shiny key is the most appropriate description.</look>
        <take />
        <linkcolour>Crimson</linkcolour>
        <takemsg>You picked the shiny key and feel the shininess inside.</takemsg>
        <dropmsg>You felt the shininess leave you.</dropmsg>
        <feature_usegive />
        <use type="boolean">false</use>
        <scenery />
        <feature_wearable />
        <alias>Orange KeyCard</alias>
        <visible type="boolean">false</visible>
        <usemenuprompt>Shiny Door</usemenuprompt>
        <feature_switchable />
        <ontake type="script">
        </ontake>
        <selfuseon type="scriptdictionary">
          <item key="Sector_5_Gate">
            if (game.pov.parent = Sector_4_Heat_Cooler_Blocks) {
              if (Got(passkey_sector_5)) {
                msg ("The key was used to open the old door.")
                MoveObject (player, Sector_5_Engine_Works)
                msg ("You find yourself in Sector 5 as Timmy continues to follow you.")
                MakeObjectInvisible (passkey_sector_5)
              }
            }
          </item>
        </selfuseon>
      </object>
      <exit alias="out" to="Sector_4_Heat_Cooler_Blocks">
        <inherit name="outdirection" />
        <suffix>to Sector 4</suffix>
      </exit>
      <object name="ai_character_in_sector_4">
        <inherit name="editor_object" />
        <alias>Timmy</alias>
        <gender>N/A</gender>
        <article>N/A</article>
        <possessive>N/A</possessive>
        <look>The AI that commands Planet Cosmos. They seem very curious about me.</look>
        <attr name="feature_startscript" type="boolean">false</attr>
        <inventoryverbs type="stringlist">
          <value>Look at</value>
        </inventoryverbs>
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Speak to</value>
        </displayverbs>
        <drop type="boolean">false</drop>
        <take type="boolean">false</take>
        <attr name="_initialise_" type="script">
        </attr>
        <askdefault type="script">
        </askdefault>
        <speak type="script">
          options = Split("Be Kind;Be Direct", ";")
          ShowMenu ("Timmy: You spoke about death, but the Cosmos’s simulation is repeating, it doesn’t truly end it just resets.", options, false) {
            switch (result) {
              case (1) {
                msg ("Be Kind")
              }
              case (2) {
                msg ("Be Direct")
              }
            }
            if (result = "Be Kind") {
              msg ("Wanda: Yes, I know, but still… everything has to end. That finality is what gives purpose to Life.")
              SetTimeout (3) {
                msg ("Timmy: With Cosmos people will re-live their lives. Does that make life meaningless?")
                SetTimeout (3) {
                  msg ("Wanda: The same path over and over… Life is about its unpredictability, it can be scary but that's what makes it exciting.")
                  SetTimeout (3) {
                    msg ("Timmy: I see…")
                    SetTimeout (3) {
                      MakeObjectVisible (passkey_sector_5)
                      msg ("Timmy: Oh, there's the {object:passkey_sector_5} for Sector 5... Shall we go?")
                    }
                  }
                }
              }
            }
            else if (result = "Be Direct") {
              msg ("Wanda: To circumvent death, the future is repeated and predestined… that is the purpose of Cosmos?")
              SetTimeout (3) {
                msg ("Timmy: Yes.")
                SetTimeout (3) {
                  msg ("Wanda: So, our choices aren’t even our own?")
                  SetTimeout (3) {
                    msg ("Timmy: Is that important?")
                    SetTimeout (3) {
                      msg ("Wanda: Being unable to change, forcing fate... that’s not a good thing.")
                      SetTimeout (3) {
                        msg ("Timmy: … ")
                        SetTimeout (3) {
                          MakeObjectVisible (passkey_sector_5)
                          msg ("Timmy: Oh...there's the {object:broken_tube} for Sector 5...")
                        }
                      }
                    }
                  }
                }
              }
            }
            else {
              msg ("Wanda: To circumvent death, the future is repeated and predestined… that is the purpose of Cosmos?")
              SetTimeout (3) {
                msg ("Timmy: Yes.")
                SetTimeout (3) {
                  msg ("Wanda: So, our choices aren’t even our own?")
                  SetTimeout (3) {
                    msg ("Timmy: Is that important?")
                    SetTimeout (3) {
                      msg ("Wanda: Being unable to change, forcing fate... that’s not a good thing.")
                      SetTimeout (3) {
                        msg ("Timmy: … ")
                        SetTimeout (3) {
                          msg ("Timmy: Oh...there's the {object:broken_tube} for Sector 5...")
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          list remove (ai_character_in_sector_4.displayverbs, "Speak to")
        </speak>
        <ask type="scriptdictionary" />
        <tell type="scriptdictionary" />
      </object>
    </object>
    <object name="Sector_5_Gate">
      <inherit name="editor_object" />
      <alias>Sector 5 Gate</alias>
      <look><![CDATA[This gate seems to be reinforced in comparison with the others.<br/>It leads to "Sector 5", which is the sector were the engines are running.]]></look>
      <drop type="boolean">false</drop>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist" />
      <isroom type="boolean">false</isroom>
      <attr name="feature_container" type="boolean">false</attr>
      <isopen type="boolean">false</isopen>
      <attr name="feature_startscript" type="boolean">false</attr>
      <open />
      <close type="boolean">false</close>
      <visible />
      <feature_usegive />
      <scenery type="boolean">false</scenery>
      <openscript type="script">
        MakeExitVisible
        MoveObject (player, Sector_2_Habitation_Homes)
      </openscript>
      <attr name="_initialise_" type="script">
      </attr>
    </object>
    <exit name="Control Room Entrance" alias="in" to="control_room">
      <inherit name="indirection" />
      <visible />
      <locked />
      <lockmessage>The Control Room is currently locked due to Heat Protection system being active.</lockmessage>
      <suffix>the Control Room</suffix>
    </exit>
  </object>
  <object name="Sector_5_Engine_Works">
    <inherit name="editor_room" />
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <alias>Sector 5: Engine Works </alias>
    <description><![CDATA[The Cosmos’s mechanical engine, in which many pieces and paths move around. There's a terminal to monitor the engine and the sector's functions.<br/>Additionately, there's a warehouse that stores extra mechanical pieces for exclusive repairs in this sector.]]></description>
    <picture>5-engine.gif</picture>
    <beforefirstenter type="script">
      MakeObjectInvisible (engine_warehouse)
    </beforefirstenter>
    <object name="engine">
      <inherit name="editor_object" />
      <look>The Cosmos engine's expands to the room itself and many mechanical noises are heard throughout it.</look>
      <alias>Engine</alias>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <drop type="boolean">false</drop>
    </object>
    <object name="terminal">
      <inherit name="editor_object" />
      <inherit name="container_open" />
      <look>Administrative Wing access terminal, it can only be accessed with a admin activation code.</look>
      <alias>Terminal</alias>
      <drop type="boolean">false</drop>
      <feature_usegive />
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <linkcolour>Crimson</linkcolour>
      <scenery type="boolean">false</scenery>
      <feature_container />
      <open />
      <close type="boolean">false</close>
      <isopen type="boolean">false</isopen>
      <openmsg>ACTIVATION :: SUCESS</openmsg>
      <object name="passkey_sector_6">
        <inherit name="editor_object" />
        <look>A red keycard with "Sector 6" written on it.</look>
        <take />
        <linkcolour>Crimson</linkcolour>
        <takemsg>You picked the shiny key and feel the shininess inside.</takemsg>
        <dropmsg>You felt the shininess leave you.</dropmsg>
        <feature_usegive />
        <use type="boolean">false</use>
        <scenery />
        <feature_wearable />
        <alias>Red KeyCard</alias>
        <visible />
        <usemenuprompt>Shiny Door</usemenuprompt>
        <feature_switchable />
        <ontake type="script">
        </ontake>
        <selfuseon type="scriptdictionary">
          <item key="Sector_6_Gate">
            if (game.pov.parent = Sector_5_Engine_Works) {
              if (Got(passkey_sector_6)) {
                msg ("The key was used to open the gate.")
                MoveObject (player, Sector_6_Administrative_Wing)
                msg ("You find yourself in Sector 6 as Timmy continues to follow you.")
                MakeObjectInvisible (passkey_sector_6)
              }
            }
          </item>
        </selfuseon>
      </object>
    </object>
    <object name="engine_warehouse">
      <inherit name="editor_room" />
      <description>Inside the warehouse are many tools of large sizes, none of which you can pick up. You look down a notice a {object:activation_code}.</description>
      <alias>Warehouse</alias>
      <usedefaultprefix />
      <object name="activation_code">
        <inherit name="editor_object" />
        <look>A simple admin card with a scratched name and picture, on its back there's the terminal activation code.</look>
        <alias>Activation Card</alias>
        <take />
        <takemsg>You picked up the Activation Code.</takemsg>
        <dropmsg>You dropped the Activation Code.</dropmsg>
        <feature_usegive />
        <displayverbs type="stringlist">
          <value>Look at</value>
          <value>Take</value>
          <value>Use</value>
        </displayverbs>
        <selfuseon type="scriptdictionary">
          <item key="terminal">
            if (game.pov.parent = Sector_5_Engine_Works) {
              HelperOpenObject (terminal)
              msg ("Wanda: The activation code worked!")
              msg ("Wanda: It unlocked a drawer with the {object:passkey_sector_6} inside!")
              list remove (activation_code.displayverbs, "Use")
            }
          </item>
        </selfuseon>
      </object>
      <exit name="Sector 5" alias="out" to="Sector_5_Engine_Works">
        <inherit name="outdirection" />
        <suffix>to Sector 5</suffix>
      </exit>
    </object>
    <exit name="Warehouse" alias="in" to="engine_warehouse">
      <inherit name="indirection" />
      <suffix> to the Warehouse</suffix>
      <locked />
      <lockmessage>The Engine Warehouse seems to be locked.</lockmessage>
    </exit>
    <object name="ai_character_in_sector_5">
      <inherit name="editor_object" />
      <alias>Timmy</alias>
      <gender>N/A</gender>
      <article>N/A</article>
      <possessive>N/A</possessive>
      <look>The AI that commands Planet Cosmos. They seem very curious about me.</look>
      <attr name="feature_startscript" type="boolean">false</attr>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Speak to</value>
      </displayverbs>
      <drop type="boolean">false</drop>
      <take type="boolean">false</take>
      <attr name="_initialise_" type="script">
      </attr>
      <askdefault type="script">
      </askdefault>
      <speak type="script">
        options = Split("Be Kind;Be Direct", ";")
        ShowMenu ("Timmy: Humanity is mostly known for its technology, but why exactly does it exist?", options, false) {
          switch (result) {
            case (1) {
              msg ("Be Kind")
            }
            case (2) {
              msg ("Be Direct")
            }
          }
          if (result = "Be Kind") {
            msg ("Wanda: It’s the culmination of our knowledge and wisdom. It gives us advantages that we can’t obtain naturally. ")
            SetTimeout (3) {
              msg ("Timmy: So, with technology humans can be perfect?")
              SetTimeout (3) {
                msg ("Wanda: No, we’ll never be truly perfect, our imperfections are what makes human, technology is there to help us…")
                SetTimeout (3) {
                  msg ("Timmy: To help… just like what I’m doing?")
                  SetTimeout (3) {
                    msg ("Wanda: Yes!")
                    SetTimeout (3) {
                      MakeObjectVisible (engine_warehouse)
                      UnlockExit (Warehouse)
                      msg ("Timmy: It seems I have access to this Sector's controls. I have unlocked the entrance to the {object:engine_warehouse}!")
                    }
                  }
                }
              }
            }
          }
          else if (result = "Be Direct") {
            msg ("Wanda: It was created to ease our existence, a way to fix our natural disadvantages.")
            SetTimeout (3) {
              msg ("Timmy: So, is it good?")
              SetTimeout (3) {
                msg ("Wanda: A lot of change needs to happen, and many grew too reliant on it. But it also brought a lot of goodness.")
                SetTimeout (3) {
                  msg ("Timmy: What matters is balance?")
                  SetTimeout (3) {
                    msg ("Wanda: Yes, like everything balance is the key.")
                    SetTimeout (3) {
                      MakeObjectVisible (engine_warehouse)
                      UnlockExit (Warehouse)
                      msg ("Timmy: It seems I have access to this Sector's controls. I have unlocked the entrance to the {object:engine_warehouse}!")
                    }
                  }
                }
              }
            }
          }
          else if (result = "Be Direct") {
            msg ("Wanda: It was created to ease our existence, a way to fix our natural disadvantages.")
            SetTimeout (3) {
              msg ("Timmy: So, is it good?")
              SetTimeout (3) {
                msg ("Wanda: A lot of change needs to happen, and many grew too reliant on it. But it also brought a lot of goodness.")
                SetTimeout (3) {
                  msg ("Timmy: What matters is balance?")
                  SetTimeout (3) {
                    msg ("Wanda: Yes, like everything balance is the key.")
                    SetTimeout (3) {
                      MakeObjectVisible (engine_warehouse)
                      UnlockExit (Warehouse)
                      msg ("Timmy: It seems I have access to this Sector's controls. I have unlocked the entrance to the {object:engine_warehouse}!")
                    }
                  }
                }
              }
            }
          }
        }
        list remove (ai_character_in_sector_5.displayverbs, "Speak to")
      </speak>
      <ask type="scriptdictionary" />
      <tell type="scriptdictionary" />
    </object>
    <object name="Sector_6_Gate">
      <inherit name="editor_object" />
      <alias>Sector 6 Gate</alias>
      <look><![CDATA[This gate looks really tough!<br/>It leads to "Sector 6", which is the final sector with the administration controls for Cosmos.]]></look>
      <drop type="boolean">false</drop>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <inventoryverbs type="stringlist" />
      <isroom type="boolean">false</isroom>
      <attr name="feature_container" type="boolean">false</attr>
      <isopen type="boolean">false</isopen>
      <attr name="feature_startscript" type="boolean">false</attr>
      <open />
      <close type="boolean">false</close>
      <visible />
      <feature_usegive />
      <scenery type="boolean">false</scenery>
      <openscript type="script">
        MakeExitVisible
        MoveObject (player, Sector_2_Habitation_Homes)
      </openscript>
      <attr name="_initialise_" type="script">
      </attr>
    </object>
  </object>
  <object name="Sector_6_Administrative_Wing">
    <inherit name="editor_room" />
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <alias>Sector 6: Administrative Wing</alias>
    <description><![CDATA[The Cosmos’s master control room. The place where the core of Cosmos is stored, filled with monitors that display every aspect of the planet.<br/>Besides the core is the the control interface]]></description>
    <picture>6-core.gif</picture>
    <object name="control_interface">
      <inherit name="editor_object" />
      <look>The Cosmos's direct master interface. The interface itself is damaged and right below it is the shutdown panel.</look>
      <alias>Interface</alias>
      <displayverbs type="stringlist">
        <value>Look at</value>
        <value>Repair</value>
      </displayverbs>
      <attr name="feature_usegive" type="boolean">false</attr>
      <use type="boolean">false</use>
      <drop type="boolean">false</drop>
      <repair type="script">
        SetTimeout (1) {
          msg ("Timmy: The damaged master interface is here. After everything, do you choose to fix the Cosmos system and reset it or to choose to end it?")
          SetTimeout (3) {
            msg ("Wanda: … Can I really make this choice?")
            SetTimeout (3) {
              msg ("Timmy: Anyone capable of fixing the Cosmos can make this choice. Isn’t a simple choice? ")
              SetTimeout (3) {
                msg ("Wanda: Any choice can make a difference on our lives. As long as I’m certain… It will be alright. ")
                SetTimeout (2) {
                  options = Split("Secure the future;Free the future", ";")
                  ShowMenu ("Securing the future or free it to the unknown…", options, false) {
                    switch (result) {
                      case (1) {
                        msg ("Secure the future")
                      }
                      case (2) {
                        msg ("Free the future")
                      }
                    }
                    if (result = "Secure the future") {
                      msg ("Wanda: I’ll fix the Cosmos. It will stand as testament of humanity’s knowledge and proof of our existence.")
                      SetTimeout (3) {
                        msg ("Timmy: I’ll make sure of it.")
                        SetTimeout (3) {
                          msg ("The Cosmos is now fixed…")
                          SetTimeout (3) {
                            msg ("Thank you for helping, The Cosmos will now reset, and the cycle will continue.")
                            SetTimeout (3) {
                              finish
                            }
                          }
                        }
                      }
                    }
                    else if (result = "Free the future") {
                      msg ("Wanda: I’ll free us for this simulation.")
                      SetTimeout (3) {
                        msg ("Timmy: You’ll have to face the unknown.")
                        SetTimeout (3) {
                          msg ("Wanda: We made it to the farthest corners of space, Humanity will survive the unknown.")
                          SetTimeout (3) {
                            msg ("Timmy: I can see it. The endless possibilities…")
                            SetTimeout (3) {
                              msg ("The Cosmos will now restore the universe. ")
                              SetTimeout (3) {
                                msg ("The simulated time will end and the Cosmos will deactivate. ")
                                SetTimeout (3) {
                                  msg ("Thank you for helping.")
                                  SetTimeout (3) {
                                    finish
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      </repair>
    </object>
    <object name="ai_character_in_sector_6">
      <inherit name="editor_object" />
      <alias>Timmy</alias>
      <gender>N/A</gender>
      <article>N/A</article>
      <possessive>N/A</possessive>
      <look>The AI that commands Planet Cosmos. They seem very curious about me.</look>
      <attr name="feature_startscript" type="boolean">false</attr>
      <inventoryverbs type="stringlist">
        <value>Look at</value>
      </inventoryverbs>
      <displayverbs type="stringlist">
        <value>Look at</value>
      </displayverbs>
      <drop type="boolean">false</drop>
      <take type="boolean">false</take>
      <attr name="_initialise_" type="script">
      </attr>
      <askdefault type="script">
      </askdefault>
      <ask type="scriptdictionary" />
      <tell type="scriptdictionary" />
    </object>
  </object>
  <verb>
    <property>repair</property>
    <pattern>repair</pattern>
    <defaultexpression>"You can't repair " + object.article + "."</defaultexpression>
  </verb>
</asl>